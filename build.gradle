/**
 * Build for the Fabric3 command line admin interface
 */
project.description = 'Fabric3 Command Line Interface'

defaultTasks 'clean', 'assemble', 'install', 'distZip'

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
    }

}

def distributions() {
    // define projects that are distributions, i.e. they contain source files; project parent directories will be ignored
    return subprojects.findAll { new File(it.projectDir, "src").exists() }
}

configure(distributions()) {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'signing'


    group = fabric3Group
    jar {
        archiveName = "fabric3-${baseName}-${version}.${extension}"
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: junitVersion
        testCompile group: 'org.easymock', name: 'easymock', version: easyMockVersion
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        archiveName = "fabric3-${baseName}-${version}-${classifier}.${extension}"
        from sourceSets.main.allSource
    }

    task docJar(type: Jar, dependsOn: javadoc) {
        classifier = 'docs'
        archiveName = "fabric3-${baseName}-${version}-${classifier}.${extension}"
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives docJar
    }

    uploadArchives {
        repositories {
            mavenDeployer {
//                repository(url: 'file:./maven')
            }
        }
    }

    signing {
        required {
            !version.endsWith('SNAPSHOT') && gradle.taskGraph.hasTask('uploadArchives')
        }
        sign configurations.archives
    }


}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}