/**
 * Build for the Fabric3 command line admin interface.
 * <p/>
 * By default, deploy project binaries, Javadoc and sources will be installed in the local Maven repo. To only build binaries and skip generating Javadoc and
 * source archives, pass the <code>skipSources<code> parameter to Gradle: gradlew -PskipSources
 * <p/>
 * To deploy to the Nexus release staging repository, change the version and execute:
 * <code>./gradlew </code>
 *
 * Followed by:
 * <code>./gradlew -Dcom.sun.net.ssl.rsaPreMasterSecretFix=true uploadArchives</code>
 *
 * Note the 'rsaPreMasterSecretFix' parameter is required as a workaround for this JDK bug:
 * https://bugs.openjdk.java.net/browse/JDK-8030806
 *
 * Note the 'uploadArchives' tasks requires a gradle.properties file to be present containing private key information and authentication parameters
 * (sonatypeUsername and sonatypePassword).
 */
project.description 'Fabric3 Command Line Interface'

defaultTasks 'clean', 'assemble', 'install', 'distZip'


allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
    }

}

def deployProjects() {
    // define projects that are deployed to Maven Central, i.e. they contain source files; project parent directories will be ignored
    return subprojects.findAll { new File(it.projectDir, "src").exists() }
}

configure(deployProjects()) {
    group = fabric3Group
    def releaseBuild = !version.endsWith('SNAPSHOT');
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'signing'

    jar {
        baseName "fabric3-${baseName}"
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: junitVersion
        testCompile group: 'org.easymock', name: 'easymock', version: easyMockVersion
    }

    if (project.hasProperty("skipSources")) {
        return
    }

    task sourcesJar(type: Jar) {
        baseName "fabric3-${baseName}"
        classifier 'sources'
        from sourceSets.main.allSource
    }

    task docJar(type: Jar, dependsOn: javadoc) {
        baseName "fabric3-${baseName}"
        classifier 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives jar
        archives sourcesJar
        archives docJar
    }

    install.repositories.mavenInstaller.pom.whenConfigured { pom ->
        pom.project { project ->
            url 'http://fabric3.org'
            name 'Fabric3'
            description 'Fabric3'

            scm {
                url 'scm:git@github.com:Fabric3/fabric3-admin.git'
                connection 'scm:git@github.com:Fabric3/fabric3-admin.git'
                developerConnection 'scm:git@github.com:Fabric3/fabric3-admin.git'
            }

            licenses {
                license {
                    name 'Apache 2'
                    url 'http://www.fabric3.org/license.html'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'fabric3'
                    name 'Fabric3 Project'
                }
            }
        }
    }

    uploadArchives {
        repositories {
            if (releaseBuild) {
                mavenDeployer {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                        authentication(userName: sonatypeUsername, password: sonatypePassword)
                    }

                    pom.project {
                        url 'http://fabric3.org'
                        name 'Fabric3'
                        description 'Fabric3'

                        scm {
                            url 'scm:git@github.com:Fabric3/fabric3-admin.git'
                            connection 'scm:git@github.com:Fabric3/fabric3-admin.git'
                            developerConnection 'scm:git@github.com:Fabric3/fabric3-admin.git'
                        }

                        licenses {
                            license {
                                name 'Apache 2'
                                url 'http://www.fabric3.org/license.html'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id 'fabric3'
                                name 'Fabric3 Project'
                            }
                        }
                    }

                }
            } else {
                mavenDeployer {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                    repository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                        authentication(userName: sonatypeUsername, password: sonatypePassword)
                    }
                }
            }
        }
        signing {
            sign configurations.archives
        }

    }


}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

